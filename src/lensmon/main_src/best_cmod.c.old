/*
 * best_cmod.c
 *
 * This program takes the output from the difmap modelfitting scripts for
 *  the AF310 monitoring program and finds the fluxes associated with the
 *  best fit models.  The best fit models are written to model files.
 *
 * Usage: best_cmod [sourcename extension
 *
 * 02Apr97 CDF,  A modification of the old getflux.c
 * 14Apr97 CDF,  Accounting for post 21Mar97 1635 models.
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "modfuncs.h"

/*.......................................................................
 *
 * Main program
 *
 */

int main(int argc, char *argv[])
{
  int no_error=1;     /* Flag set to 0 on error */
  float scal;         /* Best-fit scale factor */
  float caltime;      /* Phase self-cal timescale */
  float obsdate;      /* MJD of observation */
  char *root;         /* Source root name */
  char *ext;          /* Extension for file names */
  char modname[MMAX]; /* Input model filename */
  FILE *mfp=NULL;     /* Model output file */

  /*
   * Check command line format
   */

  if(argc != 3) {
    fprintf(stderr,"\nUsage: best_cmod source_name extension\n\n");
    return 1;
  }

  /*
   * Get relevant info from command line
   */

  root = argv[1];
  ext = argv[2];

  /*
   * Make sure that the associated UVF file exists, and get MJD obsdate
   *  from it.
   */

  if(check_uvf(root,ext,&obsdate)) {
    if(strcmp(root,"1635") == 0) {
      fprintf(stderr,"*****************************\n");
      fprintf(stderr,"ERROR: No UVF file found -- assuming pre-21Mar97");
      fprintf(stderr,"models\n");
      fprintf(stderr,"*****************************\n\n\n");
      obsdate = 0;
    }
  }

  get_modname(modname,root,ext,obsdate);

  if((cal_flux(root,ext,&scal)) == 1) {
    fprintf(stderr,"ERROR: best_cmod\n");
    return 1;
  }

  default_caltimes(root,&caltime);

  if((mfp = open_modfile(modname)) == NULL) {
    fprintf(stderr,"ERROR: best_cmod\n");
    return 1;
  }

  if(scale_data(root,ext,scal,scal,1.0,caltime,0,mfp))
      no_error = 0;

  if(mfp)
    fclose(mfp);

  if(no_error)
    return 0;
  else {
    fprintf(stderr,"ERROR: best_cmod\n");
    return 1;
  }
}
